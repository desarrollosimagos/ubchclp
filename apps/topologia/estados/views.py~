from django.views.generic import CreateView, UpdateView, DeleteView
from django.views.generic.dates import ArchiveIndexView
from django.core.urlresolvers import reverse_lazy
from django.shortcuts import render_to_response
from django.template import RequestContext
from django.http import HttpResponseRedirect
from .models import Estado
from django.core.paginator import Paginator, EmptyPage, PageNotAnInteger # Paginacion
import os
import csv
#=====================================================================================
#                            # Clase RegistrarEstado
#=====================================================================================
class RegistrarEstado(CreateView):
    template_name = 'topologia/estado/registrar_estado.html'
    model         = Estado
    success_url   = reverse_lazy("listar_estados")

#=====================================================================================
                            # Clase ActualizarEstado
#=====================================================================================
class ActualizarEstado(UpdateView):
    template_name = 'topologia/estado/actualizar_estado.html'
    model         = Estado
    success_url   = reverse_lazy("listar_estados")

#=====================================================================================
                            # Clase EliminarEstado
#=====================================================================================
class EliminarEstado(DeleteView):
    template_name  = 'topologia/estado/eliminar_estado.html'
    model          = Estado
    success_url    = reverse_lazy("listar_estados")

#======================================================================================
                    # Metodo para renderizar a /
#=====================================================================================

def base_view(request):
    
    return render_to_response('base/base.html',locals(), context_instance=RequestContext(request))

#======================================================================================
# Metodo para listar Registros y Paginacion
#======================================================================================
def select_query(request):
    estado = Estado.objects.all()
    paginator = Paginator(estado, 2) # Show 5 contacts per page
    page = request.GET.get('page')
    try:
        list_estado = paginator.page(page)
    except PageNotAnInteger:
        # If page is not an integer, deliver first page.
        list_estado = paginator.page(1)
    except EmptyPage:
        # If page is out of range (e.g. 9999), deliver last page of results.
        list_estado = paginator.page(paginator.num_pages)

    array = {
        'list_estado' : list_estado
    }
    return render_to_response('topologia/estado/lista_estado.html', array, context_instance = RequestContext(request))
#======================================================================================
# Url Importar data CSV
#======================================================================================

def load_data(request):

    os.path.dirname(os.path.abspath(__file__))

    DIR_URL = os.getcwd()

    reader = csv.reader(open(DIR_URL+str("/apps/topologia/estados/script/estados.csv")))
    
    # Recorrido de los registros
    for row in reader:
        data = row[0].split(';')
        centro = Estado(
            cod_estado     = data[0],
            estado         = data[1],
            )
        centro.save()
    return HttpResponseRedirect('/estado/lista_estado')
#======================================================================================